#include <stdio.h>
#define SIZE 100

void insertMinHeap(int arr[], int *n, int num)
{
    int i = *n;
    arr[(*n)++] = num;
    while (i > 0 && arr[(i - 1) / 2] > arr[i])
    {
        int temp = arr[(i - 1) / 2];
        arr[(i - 1) / 2] = arr[i];
        arr[i] = temp;
        i = (i - 1) / 2;
    }
}

void insertMaxHeap(int arr[], int *n, int num)
{
    int i = *n;
    arr[(*n)++] = num;
    while (i > 0 && arr[(i - 1) / 2] < arr[i])
    {
        int temp = arr[(i - 1) / 2];
        arr[(i - 1) / 2] = arr[i];
        arr[i] = temp;
        i = (i - 1) / 2;
    }
}

void printTopElement(int arr[], int n, int isMinHeap)
{
    if (n == 0)
    {
        printf(isMinHeap ? "Min Heap is empty!\n" : "Max Heap is empty!\n");
        return;
    }
    printf(isMinHeap ? "Top Element (Min Heap): %d\n" : "Top Element (Max Heap): %d\n", arr[0]);
}

void printHeap(int arr[], int n, int isMinHeap)
{
    if (n == 0)
    {
        printf(isMinHeap ? "Min Heap is empty!\n" : "Max Heap is empty!\n");
        return;
    }
    printf(isMinHeap ? "Min Heap: " : "Max Heap: ");
    for (int i = 0; i < n; i++)
    {
        printf("%d -> ", arr[i]);
    }
    printf("NULL\n");
}

int main()
{
    int arr[SIZE];
    int n = 0, choice, heapChoice, num;

    while (1)
    {
        printf("\n1. Min Heap\n2. Max Heap\n3. Exit\nEnter your choice: ");
        scanf("%d", &heapChoice);

        if (heapChoice == 1 || heapChoice == 2)
        {
            while (1)
            {
                printf("\n1. Insert\n2. Display Top Element\n3. Display Heap\n4. Go Back\nEnter your choice: ");
                scanf("%d", &choice);

                if (choice == 1)
                {
                    printf("Enter data to insert: ");
                    scanf("%d", &num);
                    if (heapChoice == 1)
                        insertMinHeap(arr, &n, num);
                    else
                        insertMaxHeap(arr, &n, num);
                }
                else if (choice == 2)
                {
                    printTopElement(arr, n, heapChoice == 1);
                }
                else if (choice == 3)
                {
                    printHeap(arr, n, heapChoice == 1);
                }
                else if (choice == 4)
                {
                    break;
                }
                else
                {
                    printf("Invalid choice!\n");
                }
            }
        }
        else if (heapChoice == 3)
        {
            break;
        }
        else
        {
            printf("Invalid choice!\n");
        }
    }

    return 0;
}
